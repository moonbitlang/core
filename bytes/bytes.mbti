package moonbitlang/core/bytes

// Values
fn default() -> Bytes

fn from_array(Array[Byte]) -> Bytes

fn from_fixedarray(FixedArray[Byte], len? : Int) -> Bytes

fn from_iter(Iter[Byte]) -> Bytes

fn of(FixedArray[Byte]) -> Bytes

// Types and methods
impl Bytes {
  default() -> Bytes
  from_array(Array[Byte]) -> Bytes
  from_fixedarray(FixedArray[Byte], len? : Int) -> Bytes
  from_iter(Iter[Byte]) -> Bytes
  iter(Bytes) -> Iter[Byte]
  of(FixedArray[Byte]) -> Bytes
  to_array(Bytes) -> Array[Byte]
  to_fixedarray(Bytes, len? : Int) -> FixedArray[Byte]
}
impl Hash for Bytes

// Type aliases
pub typealias View = BytesView

// Traits

