package moonbitlang/core/rational

// Values
fn from_double(Double) -> T!RationalError

fn new(Int64, Int64) -> T?

// Types and methods
pub(all) type! RationalError String
impl Eq for RationalError
impl Show for RationalError

type T
impl T {
  abs(Self) -> Self
  ceil(Self) -> Int64
  compare(Self, Self) -> Int
  floor(Self) -> Int64
  fract(Self) -> Self
  from_double(Double) -> Self!RationalError //deprecated
  is_integer(Self) -> Bool
  neg(Self) -> Self
  new(Int64, Int64) -> Self? //deprecated
  op_add(Self, Self) -> Self
  op_div(Self, Self) -> Self
  op_equal(Self, Self) -> Bool
  op_mul(Self, Self) -> Self
  op_sub(Self, Self) -> Self
  reciprocal(Self) -> Self
  to_double(Self) -> Double
  trunc(Self) -> Int64
}
impl Show for T
impl @moonbitlang/core/quickcheck.Arbitrary for T

// Type aliases

// Traits

