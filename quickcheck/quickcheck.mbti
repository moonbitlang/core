package moonbitlang/core/quickcheck

alias @moonbitlang/core/quickcheck/splitmix as @splitmix

// Values
fn gen[T : Arbitrary](~size? : Int, ~state? : @splitmix.RandomState) -> T

fn samples[X : Arbitrary](Int) -> Array[X]

// Types and methods

// Type aliases

// Traits
pub trait Arbitrary {
  arbitrary(Int, @splitmix.RandomState) -> Self
}

// Extension Methods
impl Arbitrary for Unit

impl Arbitrary for Bool

impl Arbitrary for Char

impl Arbitrary for Int

impl Arbitrary for Int64

impl Arbitrary for UInt

impl Arbitrary for UInt64

impl Arbitrary for Double

impl Arbitrary for String

impl Arbitrary for BigInt

impl Arbitrary for Iter

