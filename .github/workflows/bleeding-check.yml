name: nightly-check

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  nightly-check:
    continue-on-error: true
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    if: |
      (github.event_name == 'pull_request' && startsWith(github.head_ref, 'nightly/')) ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    steps:
      - uses: actions/checkout@v4

      - name: install
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          curl -fsSL https://cli.moonbitlang.com/install/unix.sh | bash -s nightly
          echo "$HOME/.moon/bin" >> $GITHUB_PATH

      - name: install on windows
        env:
          MOONBIT_INSTALL_VERSION: nightly
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          Set-ExecutionPolicy RemoteSigned -Scope CurrentUser; irm https://cli.moonbitlang.com/install/powershell.ps1 | iex
          "C:\Users\runneradmin\.moon\bin" | Out-File -FilePath $env:GITHUB_PATH -Append

      - name: moon version
        run: |
          moon version --all
          moonrun --version

      - name: Set ulimit and run moon test
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          ulimit -s 8176
          moon test --target all
          moon test --release --target all
          moon test --target native

      - name: Setup MSVC
        if: ${{ matrix.os == 'windows-latest' }}
        uses: ilammy/msvc-dev-cmd@v1

      - name: Run moon test on Windows (--target all)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          moon test --target all

      - name: Run moon test on Windows (--release + --target all)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          moon test --release --target all

      - name: Run moon test on Windows (--target native)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          moon test --target native

      - name: Test new allocator
        run: |
          moon clean
          moon test --target wasm
        env:
          MOONC_INTERNAL_PARAMS: allocator = tlsf-mbt |

      - name: check
        run: moon check --deny-warn

      - name: moon bundle
        run: moon bundle --all

      - name: moon info
        run: |
          moon info --target wasm,wasm-gc,js,native
          git diff

      - name: check core size
        run: find ./target -name '*.core' | xargs ls -lh

      - name: format diff
        run: |
          moon fmt
          git diff

  nightly-native-opt-test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    if: |
      (github.event_name == 'pull_request' && startsWith(github.head_ref, 'nightly/')) ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4

      - name: install
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          curl -fsSL https://cli.moonbitlang.com/install/unix.sh | bash -s nightly
          echo "$HOME/.moon/bin" >> $GITHUB_PATH

      - name: install on windows
        env:
          MOONBIT_INSTALL_VERSION: nightly
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          Set-ExecutionPolicy RemoteSigned -Scope CurrentUser; irm https://cli.moonbitlang.com/install/powershell.ps1 | iex
          "C:\Users\runneradmin\.moon\bin" | Out-File -FilePath $env:GITHUB_PATH -Append

      - name: moon version
        run: |
          moon version --all

      - name: Set ulimit and run moon test (--release + --target native)
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          ulimit -s 8176
          moon test --target native --release

      - name: Setup MSVC
        if: ${{ matrix.os == 'windows-latest' }}
        uses: ilammy/msvc-dev-cmd@v1

      - name: Run moon test on Windows (--release + --target native)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          moon test --target native --release
