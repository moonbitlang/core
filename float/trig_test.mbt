// Copyright 2025 International Digital Economy Academy
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

///|
test "sinf Test" {
  let data : Array[Float] = [
    1, 2, 3, 4, 5, 6.5, 7.5, 8.5, 9.5, 10.5, 0.25, 1.25, 2.25, 3.25, 4.25, -0.125,
    -1.125, -2.125, -3.125, -4.125, -0.0625, -1.0625, -2.0625, -3.0625, -4.0625,
    1024, 2048, 4096, 8192, 16384, -8192, -4096, -2048, -1024,
  ]
  let libm_results : Array[Float] = [
    0.8414709568023682, 0.9092974066734314, 0.14112000167369843, -0.756802499294281,
    -0.9589242935180664, 0.21511998772621155, 0.937999963760376, 0.79848712682724,
    -0.07515112310647964, -0.8796957731246948, 0.24740396440029144, 0.9489846229553223,
    0.7780731916427612, -0.10819513350725174, -0.8949893712997437, -0.1246747300028801,
    -0.902267575263977, -0.8503198027610779, -0.016591891646385193, 0.8323904871940613,
    -0.0624593161046505, -0.8735749125480652, -0.8815298080444336, -0.07901021838188171,
    0.7961509823799133, -0.15853337943553925, -0.313057005405426, -0.5946419835090637,
    -0.9561731815338135, -0.5599384903907776, 0.9561731815338135, 0.5946419835090637,
    0.313057005405426, 0.15853337943553925,
  ]
  for i in 0..<data.length() {
    let x = data[i]
    let res = x.sin()
    let libm_res = libm_results[i]
    assert_true!(
      iabs(res.reinterpret_as_int() - libm_res.reinterpret_as_int()) <= 2,
    )
  }
}

///|
test "cosf Test" {
  let data : Array[Float] = [
    1, 2, 3, 4, 5, 6.5, 7.5, 8.5, 9.5, 10.5, 0.25, 1.25, 2.25, 3.25, 4.25, -0.125,
    -1.125, -2.125, -3.125, -4.125, -0.0625, -1.0625, -2.0625, -3.0625, -4.0625,
    1024, 2048, 4096, 8192, 16384, -8192, -4096, -2048, -1024,
  ]
  let libm_results : Array[Float] = [
    0.5403022766113281, -0.416146844625473, -0.9899924993515015, -0.6536436080932617,
    0.28366219997406006, 0.9765876531600952, 0.3466353118419647, -0.6020119190216064,
    -0.9971721768379211, -0.47553691267967224, 0.9689124226570129, 0.3153223693370819,
    -0.6281736493110657, -0.9941296577453613, -0.44608747959136963, 0.9921976923942566,
    0.4311765134334564, -0.52626633644104, -0.9998623728752136, -0.5541895031929016,
    0.9980475306510925, 0.48668965697288513, -0.47212842106819153, -0.9968737959861755,
    -0.6050980091094971, 0.9873536229133606, 0.9497343301773071, 0.8039906024932861,
    0.2928018271923065, -0.8285341858863831, 0.2928018271923065, 0.8039906024932861,
    0.9497343301773071, 0.9873536229133606,
  ]
  for i in 0..<data.length() {
    let x = data[i]
    let res = x.cos()
    let libm_res = libm_results[i]
    assert_true!(
      iabs(res.reinterpret_as_int() - libm_res.reinterpret_as_int()) <= 2,
    )
  }
}

///|
test "tanf Test" {
  let data : Array[Float] = [
    1, 2, 3, 4, 5, 6.5, 7.5, 8.5, 9.5, 10.5, 0.25, 1.25, 2.25, 3.25, 4.25, -0.125,
    -1.125, -2.125, -3.125, -4.125, -0.0625, -1.0625, -2.0625, -3.0625, -4.0625,
    1024, 2048, 4096, 8192, 16384, -8192, -4096, -2048, -1024,
  ]
  let libm_results : Array[Float] = [
    1.5574077367782593, -2.185039758682251, -0.14254654943943024, 1.1578212976455688,
    -3.3805150985717773, 0.22027720510959625, 2.7060139179229736, -1.3263643980026245,
    0.07536423951387405, 1.8499000072479248, 0.25534191727638245, 3.0095696449279785,
    -1.2386276721954346, 0.10883402824401855, 2.0063090324401855, -0.1256551295518875,
    -2.092571258544922, 1.6157593727111816, 0.0165941771119833, -1.5019961595535278,
    -0.06258150935173035, -1.7949321269989014, 1.8671398162841797, 0.07925799489021301,
    -1.3157389163970947, -0.16056393086910248, -0.3296258747577667, -0.7396131157875061,
    -3.2655985355377197, 0.675818145275116, 3.2655985355377197, 0.7396131157875061,
    0.3296258747577667, 0.16056393086910248,
  ]
  for i in 0..<data.length() {
    let x = data[i]
    let res = x.tan()
    let libm_res = libm_results[i]
    assert_true!(
      iabs(res.reinterpret_as_int() - libm_res.reinterpret_as_int()) <= 2,
    )
  }
}

///|
test "asinf Test" {
  let data : Array[Float] = [
    -1, 1, 0.5, -0.5, 0.25, -0.25, -0.125, 0.125, 0.0625, -0.0625, 0.625, -0.625,
    0.75, -0.75, 0.875, -0.875, 0.9375, -0.9375, 0.03125, -0.03125, 0.015625, -0.015625,
    0.0078125, -0.0078125,
  ]
  let libm_results : Array[Float] = [
    -1.570796251296997, 1.570796251296997, 0.5235987901687622, -0.5235987901687622,
    0.252680242061615, -0.252680242061615, -0.12532782554626465, 0.12532782554626465,
    0.06254076212644577, -0.06254076212644577, 0.6751315593719482, -0.6751315593719482,
    0.8480620980262756, -0.8480620980262756, 1.065435767173767, -1.065435767173767,
    1.2153750658035278, -1.2153750658035278, 0.0312550887465477, -0.0312550887465477,
    0.015625635161995888, -0.015625635161995888, 0.007812579162418842, -0.007812579162418842,
  ]
  for i in 0..<data.length() {
    let x = data[i]
    let res = x.asin()
    let libm_res = libm_results[i]
    assert_true!(
      iabs(res.reinterpret_as_int() - libm_res.reinterpret_as_int()) <= 2,
    )
  }
}

///|
test "acosf Test" {
  let data : Array[Float] = [
    -1, 1, 0.5, -0.5, 0.25, -0.25, -0.125, 0.125, 0.0625, -0.0625, 0.625, -0.625,
    0.75, -0.75, 0.875, -0.875, 0.9375, -0.9375, 0.03125, -0.03125, 0.015625, -0.015625,
    0.0078125, -0.0078125,
  ]
  let libm_results : Array[Float] = [
    3.141592502593994, 0, 1.0471975803375244, 2.094395160675049, 1.3181160688400269,
    1.8234765529632568, 1.6961241960525513, 1.445468544960022, 1.5082556009292603,
    1.633337140083313, 0.8956648111343384, 2.2459278106689453, 0.722734272480011,
    2.418858289718628, 0.50536048412323, 2.6362321376800537, 0.3554212152957916,
    2.7861714363098145, 1.539541244506836, 1.6020513772964478, 1.5551706552505493,
    1.5864219665527344, 1.562983751296997, 1.5786088705062866,
  ]
  for i in 0..<data.length() {
    let x = data[i]
    let res = x.acos()
    let libm_res = libm_results[i]
    assert_true!(
      iabs(res.reinterpret_as_int() - libm_res.reinterpret_as_int()) <= 2,
    )
  }
}

///|
test "atanf Test" {
  let data : Array[Float] = [
    1, 2, 3, 4, 5, 6.5, 7.5, 8.5, 9.5, 10.5, 0.25, 1.25, 2.25, 3.25, 4.25, -0.125,
    -1.125, -2.125, -3.125, -4.125, -0.0625, -1.0625, -2.0625, -3.0625, -4.0625,
    1024, 2048, 4096, 8192, 16384, -8192, -4096, -2048, -1024,
  ]
  let libm_results : Array[Float] = [
    0.7853981852531433, 1.1071487665176392, 1.249045729637146, 1.3258177042007446,
    1.3734008073806763, 1.4181469678878784, 1.4382448196411133, 1.4536875486373901,
    1.4659193754196167, 1.4758446216583252, 0.244978666305542, 0.8960554003715515,
    1.1525720357894897, 1.2722973823547363, 1.3397057056427002, -0.12435499578714371,
    -0.8441540002822876, -1.1309537887573242, -1.2610933780670166, -1.3329603672027588,
    -0.06241881102323532, -0.8156919479370117, -1.1193432807922363, -1.2551807165145874,
    -1.3294408321380615, 1.5698198080062866, 1.5703080892562866, 1.5705522298812866,
    1.5706743001937866, 1.5707353353500366, -1.5706743001937866, -1.5705522298812866,
    -1.5703080892562866, -1.5698198080062866,
  ]
  for i in 0..<data.length() {
    let x = data[i]
    let res = x.atan()
    let libm_res = libm_results[i]
    assert_true!(
      iabs(res.reinterpret_as_int() - libm_res.reinterpret_as_int()) <= 2,
    )
  }
}
