// Copyright 2024 International Digital Economy Academy
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

pub fn to_string[A : Show, B : Show](self : (A, B)) -> String {
  "(".to_string() + self.0.to_string() + ", " + self.1.to_string() + ")"
}

pub fn to_string[A : Show, B : Show, C : Show](self : (A, B, C)) -> String {
  "(".to_string() + self.0.to_string() + ", " + self.1.to_string() + ", " + self.2.to_string() +
  ")"
}

pub fn to_string[A : Show, B : Show, C : Show, D : Show](
  self : (A, B, C, D)
) -> String {
  "(".to_string() + self.0.to_string() + ", " + self.1.to_string() + ", " + self.2.to_string() +
  ", " + self.3.to_string() + ")"
}

pub fn to_string[A : Show, B : Show, C : Show, D : Show, E : Show](
  self : (A, B, C, D, E)
) -> String {
  "(".to_string() + self.0.to_string() + ", " + self.1.to_string() + ", " + self.2.to_string() +
  ", " + self.3.to_string() + ", " + self.4.to_string() + ")"
}

test "to_string" {
  let tuple2 = (1, 2)
  let tuple3 = ("a", "b", "c")
  let tuple4 = (1, 2, 3, "hello")
  let tuple5 = (List::Cons(1, Nil), "2", 3, [4], 5)
  inspect(tuple2, content="(1, 2)")?
  inspect(tuple3, content="(a, b, c)")?
  inspect(tuple4, content="(1, 2, 3, hello)")?
  inspect(tuple5, content="(List::[1], 2, 3, [4], 5)")?
}
