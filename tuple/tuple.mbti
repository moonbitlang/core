package moonbitlang/core/tuple

alias @moonbitlang/core/quickcheck as @quickcheck

// Values
fn curry[T, U, V]((T, U) -> V) -> (T) -> (U) -> V

fn fst[T, U]((T, U)) -> T

fn map_both[T, U, V, W]((T) -> U, (V) -> W, (T, V)) -> (U, W)

fn map_fst[T, U, V]((T) -> U, (T, V)) -> (U, V)

fn map_snd[T, U, V]((T) -> U, (V, T)) -> (V, U)

fn pair[T, U](T, U) -> (T, U)

fn snd[T, U]((T, U)) -> U

fn swap[T, U]((T, U)) -> (U, T)

fn uncurry[T, U, V]((T) -> (U) -> V) -> (T, U) -> V

// Types and methods

// Type aliases

// Traits

// Extension Methods
impl @quickcheck.Arbitrary for Tuple(2)

impl @quickcheck.Arbitrary for Tuple(3)

impl @quickcheck.Arbitrary for Tuple(4)

impl @quickcheck.Arbitrary for Tuple(5)

impl @quickcheck.Arbitrary for Tuple(6)

impl @quickcheck.Arbitrary for Tuple(7)

