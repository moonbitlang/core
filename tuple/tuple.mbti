package moonbitlang/core/tuple

alias @moonbitlang/core/quickcheck as @quickcheck

// Values
fn curry[T, U, V]((T, U) -> V) -> (T) -> (U) -> V

fn fst[T, U](Tuple[T, U]) -> T

fn map_both[T, U, V, W]((T) -> U, (V) -> W, Tuple[T, V]) -> Tuple[U, W]

fn map_fst[T, U, V]((T) -> U, Tuple[T, V]) -> Tuple[U, V]

fn map_snd[T, U, V]((T) -> U, Tuple[V, T]) -> Tuple[V, U]

fn pair[T, U](T, U) -> Tuple[T, U]

fn snd[T, U](Tuple[T, U]) -> U

fn swap[T, U](Tuple[T, U]) -> Tuple[U, T]

fn uncurry[T, U, V]((T) -> (U) -> V) -> (T, U) -> V

// Types and methods

// Type aliases

// Traits

// Extension Methods
impl @quickcheck.Arbitrary for Tuple

impl @quickcheck.Arbitrary for Tuple

impl @quickcheck.Arbitrary for Tuple

impl @quickcheck.Arbitrary for Tuple

impl @quickcheck.Arbitrary for Tuple

impl @quickcheck.Arbitrary for Tuple

