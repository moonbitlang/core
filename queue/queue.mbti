package moonbitlang/core/queue

// Values

// Types and methods
type T
impl T {
  clear[A](Self[A]) -> Unit
  copy[A](Self[A]) -> Self[A]
  debug_write[A : Show](Self[A], Buffer) -> Unit
  each[A](Self[A], (A) -> Unit) -> Unit
  eachi[A](Self[A], (Int, A) -> Unit) -> Unit
  fold[A](Self[A], ~init : A, (A, A) -> A) -> A
  from_array[A](Array[A]) -> Self[A]
  is_empty[A](Self[A]) -> Bool
  iter[A](Self[A]) -> Iter[A]
  length[A](Self[A]) -> Int
  new[A]() -> Self[A]
  of[A](FixedArray[A]) -> Self[A]
  peek[A](Self[A]) -> A?
  peek_exn[A](Self[A]) -> A
  pop[A](Self[A]) -> A?
  pop_exn[A](Self[A]) -> A
  push[A](Self[A], A) -> Unit
  to_string[A : Show](Self[A]) -> String
  transfer[A](Self[A], Self[A]) -> Unit
}

// Traits

// Extension Methods
impl Show for T

