package moonbitlang/core/json

// Values
fn from_json[T : FromJson](Json, path~ : JsonPath = ..) -> T!JsonDecodeError

fn inspect(&ToJson, content? : Json, loc~ : SourceLoc = _, args_loc~ : ArgsLoc = _) -> Unit!InspectError

fn parse(String) -> Json!ParseError

fn valid(String) -> Bool

// Types and methods
pub(all) type! JsonDecodeError (JsonPath, String)
impl Eq for JsonDecodeError
impl Show for JsonDecodeError

type JsonPath
impl JsonPath {
  add_index(Self, Int) -> Self
  add_key(Self, String) -> Self
}
impl Eq for JsonPath
impl Show for JsonPath

pub(all) type! ParseError {
  InvalidChar(Position, Char)
  InvalidEof
  InvalidNumber(Position, String)
  InvalidIdentEscape(Position)
}
impl Eq for ParseError
impl Show for ParseError

pub(all) struct Position {
  line : Int
  column : Int
}
impl Eq for Position

impl Json {
  as_array(Self) -> Array[Self]?
  as_bool(Self) -> Bool?
  as_null(Self) -> Unit?
  as_number(Self) -> Double?
  as_object(Self) -> Map[String, Self]?
  as_string(Self) -> String?
  item(Self, Int) -> Self?
  stringify(Self, escape_slash~ : Bool = .., indent~ : Int = ..) -> String
  value(Self, String) -> Self?
}
impl Show for Json
impl ToJson for Json

// Type aliases
pub typealias JsonValue = Json

// Traits
pub(open) trait FromJson {
  from_json(Json, JsonPath) -> Self!JsonDecodeError
}
impl FromJson for Unit
impl FromJson for Bool
impl FromJson for Char
impl FromJson for Int
impl FromJson for Int64
impl FromJson for UInt
impl FromJson for UInt64
impl FromJson for Double
impl FromJson for String
impl[T : FromJson] FromJson for T?
impl[Ok : FromJson, Err : FromJson] FromJson for Result[Ok, Err]
impl[X : FromJson] FromJson for FixedArray[X]
impl[X : FromJson] FromJson for Array[X]
impl FromJson for BigInt
impl FromJson for Json
impl[V : FromJson] FromJson for Map[String, V]
impl[A : FromJson, B : FromJson] FromJson for (A, B)
impl[A : FromJson, B : FromJson, C : FromJson] FromJson for (A, B, C)
impl[A : FromJson, B : FromJson, C : FromJson, D : FromJson] FromJson for (A, B, C, D)
impl[A : FromJson, B : FromJson, C : FromJson, D : FromJson, E : FromJson] FromJson for (A, B, C, D, E)
impl[A : FromJson, B : FromJson, C : FromJson, D : FromJson, E : FromJson, F : FromJson] FromJson for (A, B, C, D, E, F)
impl[A : FromJson, B : FromJson, C : FromJson, D : FromJson, E : FromJson, F : FromJson, G : FromJson] FromJson for (A, B, C, D, E, F, G)
impl[T0 : FromJson, T1 : FromJson, T2 : FromJson, T3 : FromJson, T4 : FromJson, T5 : FromJson, T6 : FromJson, T7 : FromJson] FromJson for (T0, T1, T2, T3, T4, T5, T6, T7)
impl[T0 : FromJson, T1 : FromJson, T2 : FromJson, T3 : FromJson, T4 : FromJson, T5 : FromJson, T6 : FromJson, T7 : FromJson, T8 : FromJson] FromJson for (T0, T1, T2, T3, T4, T5, T6, T7, T8)
impl[T0 : FromJson, T1 : FromJson, T2 : FromJson, T3 : FromJson, T4 : FromJson, T5 : FromJson, T6 : FromJson, T7 : FromJson, T8 : FromJson, T9 : FromJson] FromJson for (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9)
impl[T0 : FromJson, T1 : FromJson, T2 : FromJson, T3 : FromJson, T4 : FromJson, T5 : FromJson, T6 : FromJson, T7 : FromJson, T8 : FromJson, T9 : FromJson, T10 : FromJson] FromJson for (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
impl[T0 : FromJson, T1 : FromJson, T2 : FromJson, T3 : FromJson, T4 : FromJson, T5 : FromJson, T6 : FromJson, T7 : FromJson, T8 : FromJson, T9 : FromJson, T10 : FromJson, T11 : FromJson] FromJson for (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
impl[T0 : FromJson, T1 : FromJson, T2 : FromJson, T3 : FromJson, T4 : FromJson, T5 : FromJson, T6 : FromJson, T7 : FromJson, T8 : FromJson, T9 : FromJson, T10 : FromJson, T11 : FromJson, T12 : FromJson] FromJson for (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
impl[T0 : FromJson, T1 : FromJson, T2 : FromJson, T3 : FromJson, T4 : FromJson, T5 : FromJson, T6 : FromJson, T7 : FromJson, T8 : FromJson, T9 : FromJson, T10 : FromJson, T11 : FromJson, T12 : FromJson, T13 : FromJson] FromJson for (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
impl[T0 : FromJson, T1 : FromJson, T2 : FromJson, T3 : FromJson, T4 : FromJson, T5 : FromJson, T6 : FromJson, T7 : FromJson, T8 : FromJson, T9 : FromJson, T10 : FromJson, T11 : FromJson, T12 : FromJson, T13 : FromJson, T14 : FromJson] FromJson for (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
impl[T0 : FromJson, T1 : FromJson, T2 : FromJson, T3 : FromJson, T4 : FromJson, T5 : FromJson, T6 : FromJson, T7 : FromJson, T8 : FromJson, T9 : FromJson, T10 : FromJson, T11 : FromJson, T12 : FromJson, T13 : FromJson, T14 : FromJson, T15 : FromJson] FromJson for (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)

