// Copyright 2025 International Digital Economy Academy
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

///|
fn offset_to_position(input : String, offset : Int) -> Position {
  let mut line = 1
  let mut column = 0
  for i in 0..<offset {
    if input.unsafe_charcode_at(i) == '\n' {
      line += 1
      column = 0
    } else {
      column += 1
    }
  }
  return Position::{ line, column }
}

///|
fn ParseContext::invalid_char[T](
  ctx : ParseContext,
  shift~ : Int = 0
) -> T!ParseError {
  let offset = ctx.offset + shift
  // FIXME: this should check the surrogate pair
  raise InvalidChar(
    offset_to_position(ctx.input, offset),
    ctx.input.unsafe_charcode_at(offset).unsafe_to_char(),
  )
}
