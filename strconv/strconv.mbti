package "moonbitlang/core/strconv"

// Values
fn parse[A : FromStr](String) -> A!StrConvError

fn parse_bool(String) -> Bool!StrConvError

#deprecated
fn parse_decimal(String) -> Decimal!StrConvError

fn parse_double(String) -> Double!StrConvError

fn parse_int(String, base~ : Int = ..) -> Int!StrConvError

fn parse_int64(String, base~ : Int = ..) -> Int64!StrConvError

fn parse_uint(String, base~ : Int = ..) -> UInt!StrConvError

fn parse_uint64(String, base~ : Int = ..) -> UInt64!StrConvError

#deprecated
fn shift(Decimal, Int) -> Unit

#deprecated
fn to_double(Decimal) -> Double!StrConvError

// Types and methods
type Decimal
impl Decimal {
  #deprecated
  from_int64(Int64) -> Self
  #deprecated
  new() -> Self
  #deprecated
  parse_decimal(String) -> Self!StrConvError
  #deprecated
  shift(Self, Int) -> Unit
  #deprecated
  to_double(Self) -> Double!StrConvError
}
impl Show for Decimal

pub(all) type! StrConvError String
impl Show for StrConvError

// Type aliases

// Traits
pub(open) trait FromStr {
  from_string(String) -> Self!StrConvError
}
impl FromStr for Bool
impl FromStr for Int
impl FromStr for Int64
impl FromStr for UInt
impl FromStr for UInt64
impl FromStr for Double

