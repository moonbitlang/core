package "moonbitlang/core/strconv"

// Values
fn[A : FromStr] parse(String) -> A raise StrConvError

fn parse_bool(String) -> Bool raise StrConvError

#deprecated
fn parse_decimal(String) -> Decimal raise StrConvError

fn parse_double(String) -> Double raise StrConvError

fn parse_int(String, base~ : Int = ..) -> Int raise StrConvError

fn parse_int64(String, base~ : Int = ..) -> Int64 raise StrConvError

fn parse_uint(String, base~ : Int = ..) -> UInt raise StrConvError

fn parse_uint64(String, base~ : Int = ..) -> UInt64 raise StrConvError

// Types and methods
type Decimal
#deprecated
fn Decimal::from_int64(Int64) -> Self
#deprecated
fn Decimal::new() -> Self
#deprecated
fn Decimal::parse_decimal(String) -> Self raise StrConvError
#deprecated
fn Decimal::shift(Self, Int) -> Unit
#deprecated
fn Decimal::to_double(Self) -> Double raise StrConvError
impl Show for Decimal

pub(all) suberror StrConvError String
impl Show for StrConvError

// Type aliases

// Traits
pub(open) trait FromStr {
  from_string(String) -> Self raise StrConvError
}
impl FromStr for Bool
impl FromStr for Int
impl FromStr for Int64
impl FromStr for UInt
impl FromStr for UInt64
impl FromStr for Double

