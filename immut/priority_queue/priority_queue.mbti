package moonbitlang/core/immut/priority_queue

// Values

// Types and methods
type ImmutablePriorityQueue
impl ImmutablePriorityQueue {
  as_iter[T : Compare + Eq](Self[T]) -> Iter[T]
  from_array[T : Compare + Eq](Array[T]) -> Self[T]
  is_empty[T](Self[T]) -> Bool
  length[T](Self[T]) -> Int
  new[T : Compare + Eq]() -> Self[T]
  peek[T](Self[T]) -> T?
  pop[T : Compare + Eq](Self[T]) -> Self[T]?
  pop_exn[T : Compare + Eq](Self[T]) -> Self[T]
  push[T : Compare + Eq](Self[T], T) -> Self[T]
  to_array[T : Compare + Eq](Self[T]) -> Array[T]
}

// Traits

// Extension Methods

