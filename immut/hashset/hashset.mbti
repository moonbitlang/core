package moonbitlang/core/immut/hashset

// Values

// Types and methods
type Set
impl Set {
  add[T : Eq + Hash](Self[T], T) -> Self[T]
  as_iter[T](Self[T]) -> Iter[T]
  contains[T : Eq + Hash](Self[T], T) -> Bool
  debug_write[T : Debug](Self[T], Buffer) -> Unit
  from_array[T : Eq + Hash](Array[T]) -> Self[T]
  is_empty[T](Self[T]) -> Bool
  iter[T](Self[T], (T) -> Unit) -> Unit
  new[T]() -> Self[T]
  of[T : Eq + Hash](FixedArray[T]) -> Self[T]
  remove[T : Eq + Hash](Self[T], T) -> Self[T]
  size[T](Self[T]) -> Int
  to_string[T : Debug](Self[T]) -> String
}

// Traits

// Extension Methods

