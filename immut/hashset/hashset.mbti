package moonbitlang/core/immut/hashset

// Values

// Types and methods
type T
impl T {
  add[A : Eq + Hash](Self[A], A) -> Self[A]
  contains[A : Eq + Hash](Self[A], A) -> Bool
  each[A](Self[A], (A) -> Unit) -> Unit
  from_array[A : Eq + Hash](Array[A]) -> Self[A]
  is_empty[A](Self[A]) -> Bool
  iter[A](Self[A]) -> Iter[A]
  new[A]() -> Self[A]
  of[A : Eq + Hash](FixedArray[A]) -> Self[A]
  remove[A : Eq + Hash](Self[A], A) -> Self[A]
  size[A](Self[A]) -> Int
  to_string[A : Show](Self[A]) -> String
}

// Traits

// Extension Methods
impl Show for T

