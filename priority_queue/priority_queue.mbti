package moonbitlang/core/priority_queue

alias @moonbitlang/core/quickcheck as @quickcheck

// Values

// Types and methods
type T
impl T {
  clear[A](Self[A]) -> Unit
  copy[A](Self[A]) -> Self[A]
  from_array[A : Compare + Eq](Array[A]) -> Self[A]
  from_iter[K : Compare + Eq](Iter[K]) -> Self[K]
  is_empty[A](Self[A]) -> Bool
  iter[A : Compare + Eq](Self[A]) -> Iter[A]
  length[A](Self[A]) -> Int
  new[A : Compare + Eq]() -> Self[A]
  of[A : Compare + Eq](FixedArray[A]) -> Self[A]
  peek[A](Self[A]) -> A?
  pop[A : Compare + Eq](Self[A]) -> A?
  pop_exn[A : Compare + Eq](Self[A]) -> Unit
  push[A : Compare + Eq](Self[A], A) -> Unit
  to_array[A : Compare + Eq](Self[A]) -> Array[A]
  to_string[A : Show + Compare + Eq](Self[A]) -> String
  unsafe_pop[A : Compare + Eq](Self[A]) -> Unit
}

// Type aliases

// Traits

// Extension Methods
impl Show for T

impl @quickcheck.Arbitrary for T

