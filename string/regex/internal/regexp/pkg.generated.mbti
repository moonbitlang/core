// Generated using `moon info`, DON'T EDIT IT
package "moonbitlang/core/string/regex/internal/regexp"

import(
  "moonbitlang/core/string/regex/internal/regexp/internal/parse"
)

// Values
fn compile(StringView, flags? : StringView) -> Regexp raise @parse.RegexpError

// Errors

// Types and methods
type MatchResult
fn MatchResult::after(Self) -> StringView
fn MatchResult::before(Self) -> StringView
fn MatchResult::get(Self, Int) -> StringView?
fn MatchResult::groups(Self) -> Map[String, StringView]
fn MatchResult::matched(Self) -> Bool
fn MatchResult::results(Self) -> Array[StringView?]

type Regexp
fn Regexp::execute(Self, StringView) -> MatchResult
#deprecated
fn Regexp::execute_with_remainder(Self, StringView) -> (MatchResult, StringView)
fn Regexp::group_by_name(Self, String) -> Int?
fn Regexp::group_count(Self) -> Int
fn Regexp::group_names(Self) -> Array[String]
fn Regexp::match_(Self, StringView) -> MatchResult?

// Type aliases
pub using @parse {type RegexpError}

// Traits

