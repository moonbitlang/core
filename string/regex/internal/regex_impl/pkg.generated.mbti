// Generated using `moon info`, DON'T EDIT IT
package "moonbitlang/core/string/regex/internal/regex_impl"

// Values
fn compile(StringView, flags? : StringView) -> Regexp raise RegexpError

// Errors
pub suberror RegexpError {
  RegexpError(err~ : Err, source_fragment~ : StringView)
}
impl Show for RegexpError

// Types and methods
pub enum Err {
  InternalError
  InvalidCharClass
  InvalidEscape
  InvalidNamedCapture
  InvalidRepeatOp
  InvalidRepeatSize
  MissingBracket
  MissingParenthesis
  MissingRepeatArgument
  TrailingBackslash
  UnexpectedParenthesis
}
impl Show for Err

pub struct MatchResult {
  input : StringView
  captures : Array[Int]
  names : Map[String, Int]
  before : StringView
  after : StringView
}
fn MatchResult::after(Self) -> StringView
fn MatchResult::before(Self) -> StringView
fn MatchResult::get(Self, Int) -> StringView?
fn MatchResult::groups(Self) -> Map[String, StringView]
fn MatchResult::matched(Self) -> Bool
fn MatchResult::results(Self) -> Array[StringView?]

type Regexp
fn Regexp::execute(Self, StringView) -> MatchResult
#deprecated
fn Regexp::execute_with_remainder(Self, StringView) -> (MatchResult, StringView)
fn Regexp::group_by_name(Self, String) -> Int?
fn Regexp::group_count(Self) -> Int
fn Regexp::group_names(Self) -> Array[String]
fn Regexp::match_(Self, StringView) -> MatchResult?

// Type aliases

// Traits

