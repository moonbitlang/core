package moonbitlang/core/string

// Values

// Types and methods
impl String {
  compare(String, String) -> Int
  concat(Array[String], ~separator : String = ..) -> String
  contains(String, String) -> Bool
  contains_char(String, Char) -> Bool
  default() -> String
  ends_with(String, String) -> Bool
  fold[A](String, ~init : A, (A, Char) -> A) -> A
  from_array(Array[Char]) -> String
  index_of(String, String, ~from : Int = ..) -> Int
  is_blank(String) -> Bool
  is_empty(String) -> Bool
  iter(String) -> Iter[Char]
  iter2(String) -> Iter2[Int, Char]
  last_index_of(String, String, ~from : Int = ..) -> Int
  pad_end(String, Int, Char) -> String
  pad_start(String, Int, Char) -> String
  repeat(String, Int) -> String
  replace(String, ~old : String, ~new : String) -> String
  replace_all(String, ~old : String, ~new : String) -> String
  rev(String) -> String
  rev_fold[A](String, ~init : A, (A, Char) -> A) -> A
  rev_iter(String) -> Iter[Char]
  split(String, String) -> Iter[String]
  starts_with(String, String) -> Bool
  to_array(String) -> Array[Char]
  to_bytes(String) -> Bytes
  to_lower(String) -> String
  to_upper(String) -> String
  trim(String, String) -> String
  trim_end(String, String) -> String
  trim_left(String, String) -> String //deprecated
  trim_right(String, String) -> String //deprecated
  trim_space(String) -> String
  trim_start(String, String) -> String
}

// Type aliases

// Traits

// Extension Methods

