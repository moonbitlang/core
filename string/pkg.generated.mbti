// Generated using `moon info`, DON'T EDIT IT
package "moonbitlang/core/string"

// Values
#deprecated
fn concat(Array[String], separator? : String) -> String

fn default() -> String

fn from_array(Array[Char]) -> String

fn from_iter(Iter[Char]) -> String

// Errors
pub suberror CreatingViewError {
  IndexOutOfBounds
  InvalidIndex
}
impl Show for CreatingViewError

// Types and methods
type View
fn View::char_length(Self) -> Int
fn View::char_length_eq(Self, Int) -> Bool
fn View::char_length_ge(Self, Int) -> Bool
fn View::contains(Self, Self) -> Bool
fn View::contains_char(Self, Char) -> Bool
fn View::data(Self) -> String
fn View::find(Self, Self) -> Int?
fn View::find_by(Self, (Char) -> Bool) -> Int?
fn[A] View::fold(Self, init~ : A, (A, Char) -> A) -> A
fn View::from_array(Array[Char]) -> Self
fn View::from_iter(Iter[Char]) -> Self
fn View::get(Self, Int) -> Int?
fn View::get_char(Self, Int) -> Char?
fn View::has_prefix(Self, Self) -> Bool
fn View::has_suffix(Self, Self) -> Bool
fn View::is_blank(Self) -> Bool
fn View::is_empty(Self) -> Bool
fn View::iter(Self) -> Iter[Char]
fn View::iter2(Self) -> Iter2[Int, Char]
fn View::length(Self) -> Int
fn View::make(Int, Char) -> Self
fn View::offset_of_nth_char(Self, Int) -> Int?
fn View::op_get(Self, Int) -> Int
fn View::pad_end(Self, Int, Char) -> String
fn View::pad_start(Self, Int, Char) -> String
fn View::repeat(Self, Int) -> Self
fn View::replace(Self, old~ : Self, new~ : Self) -> Self
fn View::replace_all(Self, old~ : Self, new~ : Self) -> Self
fn View::rev(Self) -> String
fn View::rev_find(Self, Self) -> Int?
fn[A] View::rev_fold(Self, init~ : A, (A, Char) -> A) -> A
fn View::rev_iter(Self) -> Iter[Char]
fn View::split(Self, Self) -> Iter[Self]
fn View::start_offset(Self) -> Int
fn View::strip_prefix(Self, Self) -> Self?
fn View::strip_suffix(Self, Self) -> Self?
#alias(op_as_view)
fn View::sub(Self, start? : Int, end? : Int) -> Self raise CreatingViewError
fn View::to_array(Self) -> Array[Char]
fn View::to_bytes(Self) -> Bytes
fn View::to_lower(Self) -> Self
fn View::to_upper(Self) -> Self
fn View::trim(Self, Self) -> Self
fn View::trim_end(Self, Self) -> Self
fn View::trim_space(Self) -> Self
fn View::trim_start(Self, Self) -> Self
fn View::unsafe_charcode_at(Self, Int) -> Int
fn View::view(Self, start_offset? : Int, end_offset? : Int) -> Self
impl Add for View
impl Compare for View
impl Default for View
impl Eq for View
impl Hash for View
impl Show for View
impl ToJson for View
impl ToStringView for View

fn String::char_length_eq(String, Int, start_offset? : Int, end_offset? : Int) -> Bool
fn String::char_length_ge(String, Int, start_offset? : Int, end_offset? : Int) -> Bool
fn String::contains(String, View) -> Bool
fn String::contains_char(String, Char) -> Bool
fn String::find(String, View) -> Int?
fn String::find_by(String, (Char) -> Bool) -> Int?
fn[A] String::fold(String, init~ : A, (A, Char) -> A) -> A
fn String::from_array(Array[Char]) -> String
fn String::from_iter(Iter[Char]) -> String
fn String::get(String, Int) -> Int?
fn String::get_char(String, Int) -> Char?
fn String::has_prefix(String, View) -> Bool
fn String::has_suffix(String, View) -> Bool
#deprecated
fn String::index_of(String, String, from? : Int) -> Int
fn String::is_blank(String) -> Bool
fn String::is_empty(String) -> Bool
fn String::iter(String) -> Iter[Char]
fn String::iter2(String) -> Iter2[Int, Char]
#deprecated
fn String::last_index_of(String, String, from? : Int) -> Int
fn String::offset_of_nth_char(String, Int, start_offset? : Int, end_offset? : Int) -> Int?
fn String::pad_end(String, Int, Char) -> String
fn String::pad_start(String, Int, Char) -> String
fn String::repeat(String, Int) -> String
fn String::replace(String, old~ : View, new~ : View) -> String
fn String::replace_all(String, old~ : View, new~ : View) -> String
fn String::rev(String) -> String
fn String::rev_find(String, View) -> Int?
fn[A] String::rev_fold(String, init~ : A, (A, Char) -> A) -> A
fn String::rev_iter(String) -> Iter[Char]
fn String::split(String, View) -> Iter[View]
#alias(starts_with, deprecated)
fn String::strip_prefix(String, View) -> View?
#alias(ends_with, deprecated)
fn String::strip_suffix(String, View) -> View?
#alias(op_as_view)
fn String::sub(String, start? : Int, end? : Int) -> View raise CreatingViewError
fn String::to_array(String) -> Array[Char]
fn String::to_bytes(String) -> Bytes
fn String::to_lower(String) -> String
fn String::to_upper(String) -> String
fn String::trim(String, View) -> View
fn String::trim_end(String, View) -> View
fn String::trim_space(String) -> View
fn String::trim_start(String, View) -> View
fn String::view(String, start_offset? : Int, end_offset? : Int) -> View
impl Compare for String
impl Default for String

// Type aliases

// Traits
pub trait ToStringView {
  to_string_view(Self) -> View
}
impl ToStringView for String

