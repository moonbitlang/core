package "moonbitlang/core/test"

// Values
fn bench(T, () -> Unit, count~ : UInt = ..) -> Unit!BenchError

#deprecated
fn[T : Show + Eq] eq(T, T, loc~ : SourceLoc = _) -> Unit!

fn[T] fail(String, loc~ : SourceLoc = _) -> T!

#deprecated
fn is_false(Bool, loc~ : SourceLoc = _) -> Unit!

fn[T : Show] is_not(T, T, loc~ : SourceLoc = _) -> Unit!

#deprecated
fn is_true(Bool, loc~ : SourceLoc = _) -> Unit!

#deprecated
fn[T : Show + Eq] ne(T, T, loc~ : SourceLoc = _) -> Unit!

fn new(String) -> T

fn[T : Show] same_object(T, T, loc~ : SourceLoc = _) -> Unit!

fn snapshot(T, filename~ : String, loc~ : SourceLoc = _, args_loc~ : ArgsLoc = _) -> Unit!SnapshotError

fn write(T, &Show) -> Unit

fn writeln(T, &Show) -> Unit

// Types and methods
pub(all) struct T {
  name : String
  buffer : StringBuilder
}
impl T {
  bench(Self, () -> Unit, count~ : UInt = ..) -> Unit!BenchError
  snapshot(Self, filename~ : String, loc~ : SourceLoc = _, args_loc~ : ArgsLoc = _) -> Unit!SnapshotError
  write(Self, &Show) -> Unit
  writeln(Self, &Show) -> Unit
}

// Type aliases

// Traits

