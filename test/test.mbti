package moonbitlang/core/test

// Values
fn eq[T : Show + Eq](T, T, ~loc : SourceLoc = _) -> Unit!

fn fail[T](String, ~loc : SourceLoc = _) -> T!

fn is[T : Show](T, T, ~loc : SourceLoc = _) -> Unit!

fn is_false(Bool, ~loc : SourceLoc = _) -> Unit!

fn is_not[T : Show](T, T, ~loc : SourceLoc = _) -> Unit!

fn is_true(Bool, ~loc : SourceLoc = _) -> Unit!

fn ne[T : Show + Eq](T, T, ~loc : SourceLoc = _) -> Unit!

// Types and methods
pub struct T {
  pub name : String
  pub buffer : Buffer
}
impl T {
  snapshot(Self, ~filename : String, ~loc : SourceLoc = _, ~args_loc : ArgsLoc = _) -> Unit
  write(Self, Show) -> Unit
  writeln(Self, Show) -> Unit
}

// Type aliases

// Traits

// Extension Methods

