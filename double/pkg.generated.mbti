// Generated using `moon info`, DON'T EDIT IT
package "moonbitlang/core/double"

// Values
fn from_int(Int) -> Double

let infinity : Double

let max_value : Double

let min_positive : Double

let min_value : Double

let neg_infinity : Double

let not_a_number : Double

// Errors

// Types and methods
fn Double::abs(Double) -> Double
fnalias Double::abs
#as_free_fn
fn Double::ceil(Double) -> Double
#as_free_fn
fn Double::floor(Double) -> Double
fn Double::from_int(Int) -> Double
#deprecated
fn Double::hypot(Double, Double) -> Double
fnalias Double::hypot
#deprecated
fn Double::inf(Int) -> Double
fn Double::is_close(Double, Double, relative_tolerance? : Double, absolute_tolerance? : Double) -> Bool
fnalias Double::is_close
fn Double::is_inf(Double) -> Bool
fn Double::is_nan(Double) -> Bool
fn Double::is_neg_inf(Double) -> Bool
fn Double::is_pos_inf(Double) -> Bool
#deprecated
fn Double::ln(Double) -> Double
fnalias Double::ln
#deprecated
fn Double::ln_1p(Double) -> Double
fnalias Double::ln_1p
#deprecated
fn Double::log10(Double) -> Double
fnalias Double::log10
#deprecated
fn Double::log2(Double) -> Double
fnalias Double::log2
#deprecated
fn Double::min_normal() -> Double
#deprecated
fn Double::nan() -> Double
fn Double::pow(Double, Double) -> Double
fnalias Double::pow
#as_free_fn
fn Double::round(Double) -> Double
fn Double::signum(Double) -> Double
fn Double::to_be_bytes(Double) -> Bytes
fn Double::to_le_bytes(Double) -> Bytes
fn Double::to_string(Double) -> String
fn Double::to_uint(Double) -> UInt
#as_free_fn
fn Double::trunc(Double) -> Double
impl Hash for Double
impl Mod for Double
impl Show for Double

// Type aliases

// Traits

